/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistemaparaunaexportadora;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Set;
import javax.swing.*;
import org.jfree.data.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.chart.plot.PiePlot;
import java.io.*;
/**
 *
 * @author Michael
 */
public class NewJFrame extends javax.swing.JFrame {
    ArrayList<Vehiculo> listaVehiculos = new ArrayList<>();
    ArrayList<Producto> listaProductos = new ArrayList<>();
    ArrayList<Conductor> listaConductores = new ArrayList<>();
    ArrayList<OrdenExportacion> listaOrdenesExportacion = new ArrayList<>();
    DefaultListModel<String> ListaP = new DefaultListModel<>();
    File fV,fP,fC,fO;
    File fVR,fPR,fCR,fOR;
    
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Menu = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        BotonMenuProducto = new javax.swing.JButton();
        BotonMenuVehiculo = new javax.swing.JButton();
        BotonMenuConductor = new javax.swing.JButton();
        BotonMenuOrdenCompra = new javax.swing.JButton();
        BotonMenuOrdenCompra1 = new javax.swing.JButton();
        ProductosDEMO = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Productos1 = new javax.swing.JPanel();
        BotonProductoMenu2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        MostrarProductosTextArea1 = new javax.swing.JTextArea();
        AgregarProducto1 = new javax.swing.JPanel();
        BotonProductoMenu3 = new javax.swing.JButton();
        BotonAgregarProducto3 = new javax.swing.JButton();
        AgregarProductojLabel5 = new javax.swing.JLabel();
        ProductoIDjTextField = new javax.swing.JTextField();
        ProductoNombrejTextField = new javax.swing.JTextField();
        AgregarProductojLabel6 = new javax.swing.JLabel();
        ProductoDescripcionjTextField = new javax.swing.JTextField();
        AgregarProductojLabel7 = new javax.swing.JLabel();
        ProductoPreciojTextField = new javax.swing.JTextField();
        AgregarProductojLabel8 = new javax.swing.JLabel();
        ErrorIDProductojLabel1 = new javax.swing.JLabel();
        ErrorNombreProductojLabel1 = new javax.swing.JLabel();
        ErrorDescripcionProductojLabel1 = new javax.swing.JLabel();
        ErrorPrecioProductojLabel1 = new javax.swing.JLabel();
        VehiculosDEMO = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        Vehiculos1 = new javax.swing.JPanel();
        BotonVehiculoMenu2 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        MostrarVehiculosTextArea1 = new javax.swing.JTextArea();
        AgregarVehiculo1 = new javax.swing.JPanel();
        BotonVehiculoMenu3 = new javax.swing.JButton();
        BotonAgregarVehiculo3 = new javax.swing.JButton();
        AgregarVehiculojLabel7 = new javax.swing.JLabel();
        VehiculoMarcajTextField = new javax.swing.JTextField();
        VehiculoModelojTextField = new javax.swing.JTextField();
        AgregarVehiculojLabel8 = new javax.swing.JLabel();
        VehiculoAnioFabricacionjTextField = new javax.swing.JTextField();
        AgregarVehiculojLabel9 = new javax.swing.JLabel();
        VehiculoCapacidadjTextField = new javax.swing.JTextField();
        AgregarVehiculojLabel10 = new javax.swing.JLabel();
        AgregarVehiculojLabel11 = new javax.swing.JLabel();
        AgregarVehiculojLabel12 = new javax.swing.JLabel();
        VehiculoPlacajTextField = new javax.swing.JTextField();
        ErrorMarcaVehiculojLabel1 = new javax.swing.JLabel();
        ErrorModeloVehiculojLabel1 = new javax.swing.JLabel();
        ErrorAnioVehiculojLabel1 = new javax.swing.JLabel();
        ErrorCapacidadVehiculojLabel1 = new javax.swing.JLabel();
        ErrorPlacaVehiculojLabel1 = new javax.swing.JLabel();
        VehiculoTipojComboBox = new javax.swing.JComboBox<>();
        ErrorTipoVehiculojLabel1 = new javax.swing.JLabel();
        ConductoresDEMO = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        Conductores1 = new javax.swing.JPanel();
        BotonConductorMenu2 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        MostrarConductoresTextArea1 = new javax.swing.JTextArea();
        AgregarConductor1 = new javax.swing.JPanel();
        BotonConductorMenu3 = new javax.swing.JButton();
        BotonAgregarConductor3 = new javax.swing.JButton();
        AgregarConductorjLabel4 = new javax.swing.JLabel();
        ConductorCedulajTextField = new javax.swing.JTextField();
        ConductorNombrejTextField = new javax.swing.JTextField();
        AgregarConductorjLabel5 = new javax.swing.JLabel();
        ConductorLicenciajCheckBox1 = new javax.swing.JCheckBox();
        AgregarConductorjLabel6 = new javax.swing.JLabel();
        ConductorLicenciajCheckBox2 = new javax.swing.JCheckBox();
        ConductorLicenciajCheckBox3 = new javax.swing.JCheckBox();
        ErrorLicenciaConductorjLabel1 = new javax.swing.JLabel();
        ErrorCedulaConductorjLabel1 = new javax.swing.JLabel();
        ErrorNombreConductorjLabel1 = new javax.swing.JLabel();
        OrdenExportacionDEMO = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        OrdenExportacion1 = new javax.swing.JPanel();
        BotonOrdenExportacionMenu2 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        MostrarOrdenesExportacionTextArea1 = new javax.swing.JTextArea();
        AgregarOrdenExportacion1 = new javax.swing.JPanel();
        BotonOrdenExportacionMenu3 = new javax.swing.JButton();
        BotonAgregarOrdenExportacion3 = new javax.swing.JButton();
        AgregarOrdenExportacionjLabel7 = new javax.swing.JLabel();
        AgregarOrdenExportacionjLabel8 = new javax.swing.JLabel();
        AgregarOrdenExportacionjLabel9 = new javax.swing.JLabel();
        AgregarOrdenExportacionjLabel10 = new javax.swing.JLabel();
        AgregarOrdenExportacionjLabel11 = new javax.swing.JLabel();
        AgregarOrdenExportacionjLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        OrdenExportacionNumerojTextField = new javax.swing.JTextField();
        OrdenExportacionDestinojTextField = new javax.swing.JTextField();
        OrdenExportacionFechajTextField = new javax.swing.JTextField();
        ErrorIdentificacionOrdenEjLabel1 = new javax.swing.JLabel();
        ErrorDestinoOrdenEjLabel1 = new javax.swing.JLabel();
        ErrorFechaOrdenEjLabel1 = new javax.swing.JLabel();
        ErrorMatriculaOrdenEjLabel1 = new javax.swing.JLabel();
        ErrorConductorOrdenEjLabel1 = new javax.swing.JLabel();
        ErrorProductosOrdenEjLabel1 = new javax.swing.JLabel();
        OrdenExportacionVehiculojComboBox = new javax.swing.JComboBox<>();
        OrdenExportacionConductorjComboBox = new javax.swing.JComboBox<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        OrdenExportacionProductosjList = new javax.swing.JList<>(ListaP);
        VerGrafico = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        GraficoVehiculosTotales = new javax.swing.JPanel();
        BotonOrdenExportacionMenu4 = new javax.swing.JButton();
        GraficoVehiculoTotalJPanel = new javax.swing.JPanel();
        GraficoVehiculoWarningjLabel = new javax.swing.JLabel();
        GraficoVehiculosOrdenExportacion = new javax.swing.JPanel();
        BotonOrdenExportacionMenu5 = new javax.swing.JButton();
        GraficoVehiculoOrdenEJPanel = new javax.swing.JPanel();
        GraficoVehiculoOEWarningjLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema para una exporadora");
        setBackground(new java.awt.Color(252, 244, 244));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        Menu.setBackground(new java.awt.Color(249, 242, 242));

        jPanel1.setBackground(new java.awt.Color(244, 132, 92));

        jLabel1.setBackground(new java.awt.Color(244, 132, 92));
        jLabel1.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Menu Principal");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18))
        );

        jPanel2.setBackground(new java.awt.Color(249, 242, 242));

        BotonMenuProducto.setBackground(java.awt.SystemColor.activeCaption);
        BotonMenuProducto.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        BotonMenuProducto.setForeground(new java.awt.Color(255, 255, 255));
        BotonMenuProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Productos.png"))); // NOI18N
        BotonMenuProducto.setText("Productos");
        BotonMenuProducto.setToolTipText("Ver o agregar productos");
        BotonMenuProducto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenuProducto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenuProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuProductoActionPerformed(evt);
            }
        });

        BotonMenuVehiculo.setBackground(java.awt.SystemColor.activeCaption);
        BotonMenuVehiculo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        BotonMenuVehiculo.setForeground(new java.awt.Color(255, 255, 255));
        BotonMenuVehiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Vehiculos.png"))); // NOI18N
        BotonMenuVehiculo.setText("Vehículos");
        BotonMenuVehiculo.setToolTipText("Ver o agregar vehículos");
        BotonMenuVehiculo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenuVehiculo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenuVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuVehiculoActionPerformed(evt);
            }
        });

        BotonMenuConductor.setBackground(java.awt.SystemColor.activeCaption);
        BotonMenuConductor.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        BotonMenuConductor.setForeground(new java.awt.Color(255, 255, 255));
        BotonMenuConductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Conductores.png"))); // NOI18N
        BotonMenuConductor.setText("Conductores");
        BotonMenuConductor.setToolTipText("Ver o agregar conductores");
        BotonMenuConductor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenuConductor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenuConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuConductorActionPerformed(evt);
            }
        });

        BotonMenuOrdenCompra.setBackground(new java.awt.Color(149, 175, 204));
        BotonMenuOrdenCompra.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        BotonMenuOrdenCompra.setForeground(new java.awt.Color(255, 255, 255));
        BotonMenuOrdenCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/OrdenDeExportacion.png"))); // NOI18N
        BotonMenuOrdenCompra.setText("Orden de exportación");
        BotonMenuOrdenCompra.setToolTipText("Ver o agregar ordenes de exportación");
        BotonMenuOrdenCompra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenuOrdenCompra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenuOrdenCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuOrdenCompraActionPerformed(evt);
            }
        });

        BotonMenuOrdenCompra1.setBackground(new java.awt.Color(149, 175, 204));
        BotonMenuOrdenCompra1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        BotonMenuOrdenCompra1.setForeground(new java.awt.Color(255, 255, 255));
        BotonMenuOrdenCompra1.setText("Ver Gráfico");
        BotonMenuOrdenCompra1.setToolTipText("Ver o agregar ordenes de exportación");
        BotonMenuOrdenCompra1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BotonMenuOrdenCompra1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BotonMenuOrdenCompra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMenuOrdenCompra1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotonMenuConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotonMenuOrdenCompra))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(BotonMenuOrdenCompra1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotonMenuVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotonMenuProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BotonMenuVehiculo)
                    .addComponent(BotonMenuProducto))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BotonMenuConductor)
                    .addComponent(BotonMenuOrdenCompra))
                .addGap(18, 18, 18)
                .addComponent(BotonMenuOrdenCompra1)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(0, 91, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane1.add(Menu, "card2");

        ProductosDEMO.setBackground(new java.awt.Color(249, 242, 242));

        jPanel13.setBackground(new java.awt.Color(244, 132, 92));

        jLabel15.setBackground(new java.awt.Color(244, 132, 92));
        jLabel15.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Productos");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.setBackground(new java.awt.Color(172, 213, 143));

        Productos1.setBackground(new java.awt.Color(249, 242, 242));

        BotonProductoMenu2.setBackground(new java.awt.Color(149, 175, 204));
        BotonProductoMenu2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonProductoMenu2.setForeground(new java.awt.Color(255, 255, 255));
        BotonProductoMenu2.setText("Menu principal");
        BotonProductoMenu2.setToolTipText("Regresar al menu principal");
        BotonProductoMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonProductoMenu2ActionPerformed(evt);
            }
        });

        MostrarProductosTextArea1.setEditable(false);
        MostrarProductosTextArea1.setColumns(20);
        MostrarProductosTextArea1.setRows(5);
        jScrollPane6.setViewportView(MostrarProductosTextArea1);

        javax.swing.GroupLayout Productos1Layout = new javax.swing.GroupLayout(Productos1);
        Productos1.setLayout(Productos1Layout);
        Productos1Layout.setHorizontalGroup(
            Productos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Productos1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BotonProductoMenu2)
                .addContainerGap())
        );
        Productos1Layout.setVerticalGroup(
            Productos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Productos1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Productos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Productos1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotonProductoMenu2))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lista de Productos", Productos1);

        AgregarProducto1.setBackground(new java.awt.Color(249, 242, 242));

        BotonProductoMenu3.setBackground(new java.awt.Color(149, 175, 204));
        BotonProductoMenu3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonProductoMenu3.setForeground(new java.awt.Color(255, 255, 255));
        BotonProductoMenu3.setText("Menu principal");
        BotonProductoMenu3.setToolTipText("Regresar al menu principal");
        BotonProductoMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonProductoMenu3ActionPerformed(evt);
            }
        });

        BotonAgregarProducto3.setBackground(new java.awt.Color(149, 175, 204));
        BotonAgregarProducto3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonAgregarProducto3.setForeground(new java.awt.Color(255, 255, 255));
        BotonAgregarProducto3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Agregar.png"))); // NOI18N
        BotonAgregarProducto3.setText("Agregar");
        BotonAgregarProducto3.setToolTipText("Agregar nuevo producto");
        BotonAgregarProducto3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarProducto3ActionPerformed(evt);
            }
        });

        AgregarProductojLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarProductojLabel5.setText("ID");

        ProductoIDjTextField.setAutoscrolls(false);
        ProductoIDjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductoIDjTextFieldActionPerformed(evt);
            }
        });

        ProductoNombrejTextField.setAutoscrolls(false);

        AgregarProductojLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarProductojLabel6.setText("Nombre");

        ProductoDescripcionjTextField.setAutoscrolls(false);

        AgregarProductojLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarProductojLabel7.setText("Breve descripción");

        ProductoPreciojTextField.setAutoscrolls(false);

        AgregarProductojLabel8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarProductojLabel8.setText("Precio");

        ErrorIDProductojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorIDProductojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorNombreProductojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorNombreProductojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorDescripcionProductojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorDescripcionProductojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorPrecioProductojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorPrecioProductojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AgregarProducto1Layout = new javax.swing.GroupLayout(AgregarProducto1);
        AgregarProducto1.setLayout(AgregarProducto1Layout);
        AgregarProducto1Layout.setHorizontalGroup(
            AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarProducto1Layout.createSequentialGroup()
                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarProducto1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AgregarProducto1Layout.createSequentialGroup()
                                .addComponent(AgregarProductojLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ProductoIDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AgregarProducto1Layout.createSequentialGroup()
                                .addComponent(AgregarProductojLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ProductoDescripcionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarProducto1Layout.createSequentialGroup()
                                .addComponent(AgregarProductojLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ProductoPreciojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarProducto1Layout.createSequentialGroup()
                                .addComponent(AgregarProductojLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ProductoNombrejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarProducto1Layout.createSequentialGroup()
                                .addGap(0, 354, Short.MAX_VALUE)
                                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ErrorIDProductojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ErrorNombreProductojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(BotonAgregarProducto3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BotonProductoMenu3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addComponent(ErrorDescripcionProductojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ErrorPrecioProductojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        AgregarProducto1Layout.setVerticalGroup(
            AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarProducto1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarProductojLabel5)
                    .addComponent(ProductoIDjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorIDProductojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarProductojLabel6)
                    .addComponent(ProductoNombrejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorNombreProductojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarProductojLabel7)
                    .addComponent(ProductoDescripcionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorDescripcionProductojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarProducto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarProductojLabel8)
                    .addComponent(ProductoPreciojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorPrecioProductojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(BotonAgregarProducto3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonProductoMenu3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Agregar un nuevo Producto", AgregarProducto1);

        javax.swing.GroupLayout ProductosDEMOLayout = new javax.swing.GroupLayout(ProductosDEMO);
        ProductosDEMO.setLayout(ProductosDEMOLayout);
        ProductosDEMOLayout.setHorizontalGroup(
            ProductosDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ProductosDEMOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        ProductosDEMOLayout.setVerticalGroup(
            ProductosDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductosDEMOLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jLayeredPane1.add(ProductosDEMO, "card2");

        VehiculosDEMO.setBackground(new java.awt.Color(249, 242, 242));

        jPanel14.setBackground(new java.awt.Color(244, 132, 92));

        jLabel16.setBackground(new java.awt.Color(244, 132, 92));
        jLabel16.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Vehículos");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(18, 18, 18))
        );

        jTabbedPane2.setBackground(new java.awt.Color(172, 213, 143));

        Vehiculos1.setBackground(new java.awt.Color(249, 242, 242));

        BotonVehiculoMenu2.setBackground(new java.awt.Color(149, 175, 204));
        BotonVehiculoMenu2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonVehiculoMenu2.setForeground(new java.awt.Color(255, 255, 255));
        BotonVehiculoMenu2.setText("Menu principal");
        BotonVehiculoMenu2.setToolTipText("Regresar al menu principal");
        BotonVehiculoMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVehiculoMenu2ActionPerformed(evt);
            }
        });

        MostrarVehiculosTextArea1.setEditable(false);
        MostrarVehiculosTextArea1.setColumns(20);
        MostrarVehiculosTextArea1.setRows(5);
        jScrollPane8.setViewportView(MostrarVehiculosTextArea1);

        javax.swing.GroupLayout Vehiculos1Layout = new javax.swing.GroupLayout(Vehiculos1);
        Vehiculos1.setLayout(Vehiculos1Layout);
        Vehiculos1Layout.setHorizontalGroup(
            Vehiculos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Vehiculos1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVehiculoMenu2)
                .addContainerGap())
        );
        Vehiculos1Layout.setVerticalGroup(
            Vehiculos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Vehiculos1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(Vehiculos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Vehiculos1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotonVehiculoMenu2))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Lista de Vehículos", Vehiculos1);

        AgregarVehiculo1.setBackground(new java.awt.Color(249, 242, 242));

        BotonVehiculoMenu3.setBackground(new java.awt.Color(149, 175, 204));
        BotonVehiculoMenu3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonVehiculoMenu3.setForeground(new java.awt.Color(255, 255, 255));
        BotonVehiculoMenu3.setText("Menu principal");
        BotonVehiculoMenu3.setToolTipText("Regresar al menu principal");
        BotonVehiculoMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVehiculoMenu3ActionPerformed(evt);
            }
        });

        BotonAgregarVehiculo3.setBackground(new java.awt.Color(149, 175, 204));
        BotonAgregarVehiculo3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonAgregarVehiculo3.setForeground(new java.awt.Color(255, 255, 255));
        BotonAgregarVehiculo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Agregar.png"))); // NOI18N
        BotonAgregarVehiculo3.setText("Agregar");
        BotonAgregarVehiculo3.setToolTipText("Agregar nuevo vehículo");
        BotonAgregarVehiculo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarVehiculo3ActionPerformed(evt);
            }
        });

        AgregarVehiculojLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel7.setText("Marca");

        VehiculoMarcajTextField.setAutoscrolls(false);

        VehiculoModelojTextField.setAutoscrolls(false);

        AgregarVehiculojLabel8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel8.setText("Modelo");

        VehiculoAnioFabricacionjTextField.setAutoscrolls(false);

        AgregarVehiculojLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel9.setText("Año de fabricación");

        VehiculoCapacidadjTextField.setAutoscrolls(false);

        AgregarVehiculojLabel10.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel10.setText("Capacidad");

        AgregarVehiculojLabel11.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel11.setText("Seleccione el tipo de vehículo");

        AgregarVehiculojLabel12.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarVehiculojLabel12.setText("Placa");

        VehiculoPlacajTextField.setAutoscrolls(false);

        ErrorMarcaVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorMarcaVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorModeloVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorModeloVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorAnioVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorAnioVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorCapacidadVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorCapacidadVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorPlacaVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorPlacaVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));

        VehiculoTipojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccione el tipo","Automovil", "Aeronave", "Embarcación"}));
        VehiculoTipojComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VehiculoTipojComboBoxActionPerformed(evt);
            }
        });

        ErrorTipoVehiculojLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorTipoVehiculojLabel1.setForeground(new java.awt.Color(255, 0, 0));
        ErrorTipoVehiculojLabel1.setToolTipText("");

        javax.swing.GroupLayout AgregarVehiculo1Layout = new javax.swing.GroupLayout(AgregarVehiculo1);
        AgregarVehiculo1.setLayout(AgregarVehiculo1Layout);
        AgregarVehiculo1Layout.setHorizontalGroup(
            AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarVehiculo1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(VehiculoMarcajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(VehiculoModelojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(VehiculoCapacidadjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(VehiculoAnioFabricacionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(VehiculoPlacajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ErrorMarcaVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorModeloVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorAnioVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorCapacidadVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorPlacaVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BotonAgregarVehiculo3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BotonVehiculoMenu3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarVehiculo1Layout.createSequentialGroup()
                        .addComponent(AgregarVehiculojLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VehiculoTipojComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ErrorTipoVehiculojLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))))
                .addContainerGap())
        );
        AgregarVehiculo1Layout.setVerticalGroup(
            AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarVehiculo1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarVehiculojLabel7)
                    .addComponent(VehiculoMarcajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorMarcaVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarVehiculojLabel8)
                    .addComponent(VehiculoModelojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorModeloVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarVehiculojLabel9)
                    .addComponent(VehiculoAnioFabricacionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorAnioVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarVehiculojLabel10)
                    .addComponent(VehiculoCapacidadjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorCapacidadVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VehiculoTipojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarVehiculojLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorTipoVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarVehiculo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VehiculoPlacajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarVehiculojLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorPlacaVehiculojLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(BotonAgregarVehiculo3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonVehiculoMenu3)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Agregar un nuevo Vehículo", AgregarVehiculo1);

        javax.swing.GroupLayout VehiculosDEMOLayout = new javax.swing.GroupLayout(VehiculosDEMO);
        VehiculosDEMO.setLayout(VehiculosDEMOLayout);
        VehiculosDEMOLayout.setHorizontalGroup(
            VehiculosDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VehiculosDEMOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        VehiculosDEMOLayout.setVerticalGroup(
            VehiculosDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VehiculosDEMOLayout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jLayeredPane1.add(VehiculosDEMO, "card2");

        ConductoresDEMO.setBackground(new java.awt.Color(249, 242, 242));

        jPanel15.setBackground(new java.awt.Color(244, 132, 92));

        jLabel17.setBackground(new java.awt.Color(244, 132, 92));
        jLabel17.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Conductores");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(18, 18, 18))
        );

        jTabbedPane3.setBackground(new java.awt.Color(172, 213, 143));

        Conductores1.setBackground(new java.awt.Color(249, 242, 242));

        BotonConductorMenu2.setBackground(new java.awt.Color(149, 175, 204));
        BotonConductorMenu2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonConductorMenu2.setForeground(new java.awt.Color(255, 255, 255));
        BotonConductorMenu2.setText("Menu principal");
        BotonConductorMenu2.setToolTipText("Regresar al menu principal");
        BotonConductorMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConductorMenu2ActionPerformed(evt);
            }
        });

        MostrarConductoresTextArea1.setEditable(false);
        MostrarConductoresTextArea1.setColumns(20);
        MostrarConductoresTextArea1.setRows(5);
        jScrollPane7.setViewportView(MostrarConductoresTextArea1);

        javax.swing.GroupLayout Conductores1Layout = new javax.swing.GroupLayout(Conductores1);
        Conductores1.setLayout(Conductores1Layout);
        Conductores1Layout.setHorizontalGroup(
            Conductores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Conductores1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BotonConductorMenu2)
                .addContainerGap())
        );
        Conductores1Layout.setVerticalGroup(
            Conductores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Conductores1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(Conductores1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Conductores1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotonConductorMenu2))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Lista de Conductores", Conductores1);

        AgregarConductor1.setBackground(new java.awt.Color(249, 242, 242));

        BotonConductorMenu3.setBackground(new java.awt.Color(149, 175, 204));
        BotonConductorMenu3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonConductorMenu3.setForeground(new java.awt.Color(255, 255, 255));
        BotonConductorMenu3.setText("Menu principal");
        BotonConductorMenu3.setToolTipText("Regresar al menu principal");
        BotonConductorMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConductorMenu3ActionPerformed(evt);
            }
        });

        BotonAgregarConductor3.setBackground(new java.awt.Color(149, 175, 204));
        BotonAgregarConductor3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonAgregarConductor3.setForeground(new java.awt.Color(255, 255, 255));
        BotonAgregarConductor3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Agregar.png"))); // NOI18N
        BotonAgregarConductor3.setText("Agregar");
        BotonAgregarConductor3.setToolTipText("Agregar nuevo conductor");
        BotonAgregarConductor3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarConductor3ActionPerformed(evt);
            }
        });

        AgregarConductorjLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarConductorjLabel4.setText("Cédula");

        ConductorCedulajTextField.setAutoscrolls(false);

        ConductorNombrejTextField.setAutoscrolls(false);

        AgregarConductorjLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarConductorjLabel5.setText("Nombre");

        ConductorLicenciajCheckBox1.setBackground(new java.awt.Color(249, 242, 242));
        ConductorLicenciajCheckBox1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        ConductorLicenciajCheckBox1.setText("Licencia profesinoal para automoviles");
        ConductorLicenciajCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConductorLicenciajCheckBox1ActionPerformed(evt);
            }
        });

        AgregarConductorjLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarConductorjLabel6.setText("Seleccione una o varias de las licencias que tiene el conductor:");

        ConductorLicenciajCheckBox2.setBackground(new java.awt.Color(249, 242, 242));
        ConductorLicenciajCheckBox2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        ConductorLicenciajCheckBox2.setText("Licencia de piloto de aeronaves");
        ConductorLicenciajCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConductorLicenciajCheckBox2ActionPerformed(evt);
            }
        });

        ConductorLicenciajCheckBox3.setBackground(new java.awt.Color(249, 242, 242));
        ConductorLicenciajCheckBox3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        ConductorLicenciajCheckBox3.setText("Licencia de navegación de embarcaciones");

        ErrorLicenciaConductorjLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorLicenciaConductorjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorCedulaConductorjLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorCedulaConductorjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorNombreConductorjLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        ErrorNombreConductorjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AgregarConductor1Layout = new javax.swing.GroupLayout(AgregarConductor1);
        AgregarConductor1.setLayout(AgregarConductor1Layout);
        AgregarConductor1Layout.setHorizontalGroup(
            AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarConductor1Layout.createSequentialGroup()
                .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarConductor1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ErrorCedulaConductorjLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ErrorNombreConductorjLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AgregarConductor1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AgregarConductor1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ConductorLicenciajCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ConductorLicenciajCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ConductorLicenciajCheckBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ErrorLicenciaConductorjLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AgregarConductor1Layout.createSequentialGroup()
                                .addComponent(AgregarConductorjLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ConductorNombrejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(AgregarConductorjLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarConductor1Layout.createSequentialGroup()
                                .addComponent(AgregarConductorjLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(ConductorCedulajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarConductor1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonConductorMenu3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonAgregarConductor3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        AgregarConductor1Layout.setVerticalGroup(
            AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarConductor1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarConductorjLabel4)
                    .addComponent(ConductorCedulajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorCedulaConductorjLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AgregarConductor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarConductorjLabel5)
                    .addComponent(ConductorNombrejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorNombreConductorjLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AgregarConductorjLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConductorLicenciajCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConductorLicenciajCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConductorLicenciajCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorLicenciaConductorjLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addComponent(BotonAgregarConductor3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonConductorMenu3)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Agregar nuevo Conductor", AgregarConductor1);

        javax.swing.GroupLayout ConductoresDEMOLayout = new javax.swing.GroupLayout(ConductoresDEMO);
        ConductoresDEMO.setLayout(ConductoresDEMOLayout);
        ConductoresDEMOLayout.setHorizontalGroup(
            ConductoresDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ConductoresDEMOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        ConductoresDEMOLayout.setVerticalGroup(
            ConductoresDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConductoresDEMOLayout.createSequentialGroup()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        jLayeredPane1.add(ConductoresDEMO, "card2");

        OrdenExportacionDEMO.setBackground(new java.awt.Color(249, 242, 242));

        jPanel16.setBackground(new java.awt.Color(244, 132, 92));

        jLabel18.setBackground(new java.awt.Color(244, 132, 92));
        jLabel18.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Ordenes de Exportación");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(18, 18, 18))
        );

        jTabbedPane4.setBackground(new java.awt.Color(172, 213, 143));

        OrdenExportacion1.setBackground(new java.awt.Color(249, 242, 242));

        BotonOrdenExportacionMenu2.setBackground(new java.awt.Color(149, 175, 204));
        BotonOrdenExportacionMenu2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonOrdenExportacionMenu2.setForeground(new java.awt.Color(255, 255, 255));
        BotonOrdenExportacionMenu2.setText("Menu principal");
        BotonOrdenExportacionMenu2.setToolTipText("Regresar al menu principal");
        BotonOrdenExportacionMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOrdenExportacionMenu2ActionPerformed(evt);
            }
        });

        MostrarOrdenesExportacionTextArea1.setEditable(false);
        MostrarOrdenesExportacionTextArea1.setColumns(20);
        MostrarOrdenesExportacionTextArea1.setRows(5);
        jScrollPane10.setViewportView(MostrarOrdenesExportacionTextArea1);

        javax.swing.GroupLayout OrdenExportacion1Layout = new javax.swing.GroupLayout(OrdenExportacion1);
        OrdenExportacion1.setLayout(OrdenExportacion1Layout);
        OrdenExportacion1Layout.setHorizontalGroup(
            OrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenExportacion1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BotonOrdenExportacionMenu2)
                .addContainerGap())
        );
        OrdenExportacion1Layout.setVerticalGroup(
            OrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrdenExportacion1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(OrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrdenExportacion1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BotonOrdenExportacionMenu2))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane4.addTab("Lista de Ordenes de exportación", OrdenExportacion1);

        AgregarOrdenExportacion1.setBackground(new java.awt.Color(249, 242, 242));

        BotonOrdenExportacionMenu3.setBackground(new java.awt.Color(149, 175, 204));
        BotonOrdenExportacionMenu3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonOrdenExportacionMenu3.setForeground(new java.awt.Color(255, 255, 255));
        BotonOrdenExportacionMenu3.setText("Menu principal");
        BotonOrdenExportacionMenu3.setToolTipText("Regresar al menu principal");
        BotonOrdenExportacionMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOrdenExportacionMenu3ActionPerformed(evt);
            }
        });

        BotonAgregarOrdenExportacion3.setBackground(new java.awt.Color(149, 175, 204));
        BotonAgregarOrdenExportacion3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonAgregarOrdenExportacion3.setForeground(new java.awt.Color(255, 255, 255));
        BotonAgregarOrdenExportacion3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/iconos/Agregar.png"))); // NOI18N
        BotonAgregarOrdenExportacion3.setText("Agregar");
        BotonAgregarOrdenExportacion3.setToolTipText("Agregar nueva orden de exportación");
        BotonAgregarOrdenExportacion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarOrdenExportacion3ActionPerformed(evt);
            }
        });

        AgregarOrdenExportacionjLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel7.setText("Número de identificación");

        AgregarOrdenExportacionjLabel8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel8.setText("Destino");

        AgregarOrdenExportacionjLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel9.setText("Fecha");

        AgregarOrdenExportacionjLabel10.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel10.setText("Vehiculo (matricula)");

        AgregarOrdenExportacionjLabel11.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel11.setText("Conductor (cédula)");

        AgregarOrdenExportacionjLabel12.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        AgregarOrdenExportacionjLabel12.setText("Productos (ID)");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(253, 149, 72));
        jLabel3.setText("(Si quiere seleccionar más de 1 mantenga presionada la tecla ctrl)");

        OrdenExportacionNumerojTextField.setAutoscrolls(false);

        OrdenExportacionDestinojTextField.setAutoscrolls(false);

        OrdenExportacionFechajTextField.setAutoscrolls(false);

        ErrorIdentificacionOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorIdentificacionOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorDestinoOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorDestinoOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));
        ErrorDestinoOrdenEjLabel1.setText(".");

        ErrorFechaOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorFechaOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorMatriculaOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorMatriculaOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorConductorOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorConductorOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        ErrorProductosOrdenEjLabel1.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        ErrorProductosOrdenEjLabel1.setForeground(new java.awt.Color(255, 0, 0));

        OrdenExportacionVehiculojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion" }));
        OrdenExportacionVehiculojComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenExportacionVehiculojComboBoxActionPerformed(evt);
            }
        });

        OrdenExportacionConductorjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Seleccione un conductor" }));

        jScrollPane11.setViewportView(OrdenExportacionProductosjList);

        javax.swing.GroupLayout AgregarOrdenExportacion1Layout = new javax.swing.GroupLayout(AgregarOrdenExportacion1);
        AgregarOrdenExportacion1.setLayout(AgregarOrdenExportacion1Layout);
        AgregarOrdenExportacion1Layout.setHorizontalGroup(
            AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarOrdenExportacion1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarOrdenExportacion1Layout.createSequentialGroup()
                        .addComponent(AgregarOrdenExportacionjLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OrdenExportacionNumerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarOrdenExportacion1Layout.createSequentialGroup()
                        .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgregarOrdenExportacionjLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AgregarOrdenExportacionjLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AgregarOrdenExportacionjLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AgregarOrdenExportacionjLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OrdenExportacionVehiculojComboBox, 0, 310, Short.MAX_VALUE)
                            .addComponent(OrdenExportacionConductorjComboBox, 0, 310, Short.MAX_VALUE)
                            .addComponent(ErrorFechaOrdenEjLabel1)
                            .addComponent(OrdenExportacionFechajTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(ErrorMatriculaOrdenEjLabel1)
                            .addComponent(ErrorConductorOrdenEjLabel1)
                            .addComponent(ErrorProductosOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarOrdenExportacion1Layout.createSequentialGroup()
                        .addGap(0, 136, Short.MAX_VALUE)
                        .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonAgregarOrdenExportacion3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonOrdenExportacionMenu3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarOrdenExportacion1Layout.createSequentialGroup()
                        .addComponent(AgregarOrdenExportacionjLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ErrorIdentificacionOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrdenExportacionDestinojTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(ErrorDestinoOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        AgregarOrdenExportacion1Layout.setVerticalGroup(
            AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarOrdenExportacion1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarOrdenExportacionjLabel7)
                    .addComponent(OrdenExportacionNumerojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorIdentificacionOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarOrdenExportacionjLabel8)
                    .addComponent(OrdenExportacionDestinojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorDestinoOrdenEjLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarOrdenExportacionjLabel9)
                    .addComponent(OrdenExportacionFechajTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorFechaOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarOrdenExportacionjLabel10)
                    .addComponent(OrdenExportacionVehiculojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorMatriculaOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarOrdenExportacionjLabel11)
                    .addComponent(OrdenExportacionConductorjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorConductorOrdenEjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AgregarOrdenExportacion1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AgregarOrdenExportacionjLabel12)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ErrorProductosOrdenEjLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(BotonAgregarOrdenExportacion3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonOrdenExportacionMenu3)
                .addContainerGap())
        );

        jTabbedPane4.addTab("Agregar nueva Orden de exportación", AgregarOrdenExportacion1);

        javax.swing.GroupLayout OrdenExportacionDEMOLayout = new javax.swing.GroupLayout(OrdenExportacionDEMO);
        OrdenExportacionDEMO.setLayout(OrdenExportacionDEMOLayout);
        OrdenExportacionDEMOLayout.setHorizontalGroup(
            OrdenExportacionDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(OrdenExportacionDEMOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );
        OrdenExportacionDEMOLayout.setVerticalGroup(
            OrdenExportacionDEMOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdenExportacionDEMOLayout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );

        jLayeredPane1.add(OrdenExportacionDEMO, "card2");

        VerGrafico.setBackground(new java.awt.Color(249, 242, 242));

        jPanel17.setBackground(new java.awt.Color(244, 132, 92));

        jLabel19.setBackground(new java.awt.Color(244, 132, 92));
        jLabel19.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Grafico");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(18, 18, 18))
        );

        jTabbedPane5.setBackground(new java.awt.Color(172, 213, 143));

        GraficoVehiculosTotales.setBackground(new java.awt.Color(249, 242, 242));

        BotonOrdenExportacionMenu4.setBackground(new java.awt.Color(149, 175, 204));
        BotonOrdenExportacionMenu4.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonOrdenExportacionMenu4.setForeground(new java.awt.Color(255, 255, 255));
        BotonOrdenExportacionMenu4.setText("Menu principal");
        BotonOrdenExportacionMenu4.setToolTipText("Regresar al menu principal");
        BotonOrdenExportacionMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOrdenExportacionMenu4ActionPerformed(evt);
            }
        });

        GraficoVehiculoTotalJPanel.setBackground(new java.awt.Color(249, 242, 242));

        javax.swing.GroupLayout GraficoVehiculoTotalJPanelLayout = new javax.swing.GroupLayout(GraficoVehiculoTotalJPanel);
        GraficoVehiculoTotalJPanel.setLayout(GraficoVehiculoTotalJPanelLayout);
        GraficoVehiculoTotalJPanelLayout.setHorizontalGroup(
            GraficoVehiculoTotalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
        GraficoVehiculoTotalJPanelLayout.setVerticalGroup(
            GraficoVehiculoTotalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        GraficoVehiculoWarningjLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GraficoVehiculoWarningjLabel.setForeground(new java.awt.Color(255, 153, 0));

        javax.swing.GroupLayout GraficoVehiculosTotalesLayout = new javax.swing.GroupLayout(GraficoVehiculosTotales);
        GraficoVehiculosTotales.setLayout(GraficoVehiculosTotalesLayout);
        GraficoVehiculosTotalesLayout.setHorizontalGroup(
            GraficoVehiculosTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GraficoVehiculosTotalesLayout.createSequentialGroup()
                .addGroup(GraficoVehiculosTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GraficoVehiculosTotalesLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GraficoVehiculoTotalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(GraficoVehiculosTotalesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(GraficoVehiculosTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GraficoVehiculoWarningjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GraficoVehiculosTotalesLayout.createSequentialGroup()
                                .addGap(0, 452, Short.MAX_VALUE)
                                .addComponent(BotonOrdenExportacionMenu4)))))
                .addContainerGap())
        );
        GraficoVehiculosTotalesLayout.setVerticalGroup(
            GraficoVehiculosTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GraficoVehiculosTotalesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(GraficoVehiculoWarningjLabel)
                .addGap(18, 18, 18)
                .addComponent(GraficoVehiculoTotalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(BotonOrdenExportacionMenu4)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Vehiculos totales", GraficoVehiculosTotales);

        GraficoVehiculosOrdenExportacion.setBackground(new java.awt.Color(249, 242, 242));

        BotonOrdenExportacionMenu5.setBackground(new java.awt.Color(149, 175, 204));
        BotonOrdenExportacionMenu5.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        BotonOrdenExportacionMenu5.setForeground(new java.awt.Color(255, 255, 255));
        BotonOrdenExportacionMenu5.setText("Menu principal");
        BotonOrdenExportacionMenu5.setToolTipText("Regresar al menu principal");
        BotonOrdenExportacionMenu5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonOrdenExportacionMenu5ActionPerformed(evt);
            }
        });

        GraficoVehiculoOrdenEJPanel.setBackground(new java.awt.Color(249, 242, 242));

        javax.swing.GroupLayout GraficoVehiculoOrdenEJPanelLayout = new javax.swing.GroupLayout(GraficoVehiculoOrdenEJPanel);
        GraficoVehiculoOrdenEJPanel.setLayout(GraficoVehiculoOrdenEJPanelLayout);
        GraficoVehiculoOrdenEJPanelLayout.setHorizontalGroup(
            GraficoVehiculoOrdenEJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
        GraficoVehiculoOrdenEJPanelLayout.setVerticalGroup(
            GraficoVehiculoOrdenEJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        GraficoVehiculoOEWarningjLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GraficoVehiculoOEWarningjLabel.setForeground(new java.awt.Color(255, 153, 0));

        javax.swing.GroupLayout GraficoVehiculosOrdenExportacionLayout = new javax.swing.GroupLayout(GraficoVehiculosOrdenExportacion);
        GraficoVehiculosOrdenExportacion.setLayout(GraficoVehiculosOrdenExportacionLayout);
        GraficoVehiculosOrdenExportacionLayout.setHorizontalGroup(
            GraficoVehiculosOrdenExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GraficoVehiculosOrdenExportacionLayout.createSequentialGroup()
                .addGroup(GraficoVehiculosOrdenExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GraficoVehiculosOrdenExportacionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GraficoVehiculoOrdenEJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(GraficoVehiculosOrdenExportacionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(GraficoVehiculosOrdenExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GraficoVehiculoOEWarningjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(GraficoVehiculosOrdenExportacionLayout.createSequentialGroup()
                                .addGap(0, 452, Short.MAX_VALUE)
                                .addComponent(BotonOrdenExportacionMenu5)))))
                .addContainerGap())
        );
        GraficoVehiculosOrdenExportacionLayout.setVerticalGroup(
            GraficoVehiculosOrdenExportacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GraficoVehiculosOrdenExportacionLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(GraficoVehiculoOEWarningjLabel)
                .addGap(18, 18, 18)
                .addComponent(GraficoVehiculoOrdenEJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(BotonOrdenExportacionMenu5)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Vehiculos en ordenes de exportación", GraficoVehiculosOrdenExportacion);

        javax.swing.GroupLayout VerGraficoLayout = new javax.swing.GroupLayout(VerGrafico);
        VerGrafico.setLayout(VerGraficoLayout);
        VerGraficoLayout.setHorizontalGroup(
            VerGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VerGraficoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane5)
                .addContainerGap())
        );
        VerGraficoLayout.setVerticalGroup(
            VerGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VerGraficoLayout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane5)
                .addContainerGap())
        );

        jLayeredPane1.add(VerGrafico, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void BotonMenuProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuProductoActionPerformed
        //mediante archivo plano
        /*
        if(listaProductos.isEmpty()){
            try{
            fP = new File("data/archivosPlanos", "guardadoProd.txt");
            DeArchivo(fP);
            MostrarProd();
            }
            catch(Exception e){
                System.out.print("error");
            }
        } 
        */
        //mediante archivo randomico
        if(listaProductos.isEmpty()){
            try{
            fPR = new File("data/archivosPlanos", "guardadoProdRan.dat");
            DeArchivoRan(fPR);
            MostrarProd();
            }
            catch(Exception e){
                System.out.print("error");
            }
        }    
        cambiarPanel(ProductosDEMO);
    }//GEN-LAST:event_BotonMenuProductoActionPerformed

    private void BotonMenuVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuVehiculoActionPerformed
        //mediante archivo plano
        /*
        if(listaVehiculos.isEmpty()){
            try{
            fV = new File("data/archivosPlanos", "guardadoVehi.txt");
            DeArchivo(fV);
            MostrarVehi();
            }
            catch(Exception e){
                
            }
        }   
        */
        //mediante archivo randomico
        if(listaVehiculos.isEmpty()){
            try{
            fVR = new File("data/archivosPlanos", "guardadoVehiRan.dat");
            DeArchivoRan(fVR);
            MostrarVehi();
            }
            catch(Exception e){
                
            }
        }   
        cambiarPanel(VehiculosDEMO);
    }//GEN-LAST:event_BotonMenuVehiculoActionPerformed

    private void BotonMenuConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuConductorActionPerformed
        //mediante archivo plano
        /*
        if(listaConductores.isEmpty()){
            try{
            fC = new File("data/archivosPlanos", "guardadoCond.txt");
            DeArchivo(fC);
            MostrarCond();
            }
            catch(Exception e){
               System.out.println("error");
            }
        }  
        */
        //mediante archivo randomico
        if(listaConductores.isEmpty()){
            try{
            fCR = new File("data/archivosPlanos", "guardadoCondRan.dat");
            DeArchivoRan(fCR);
            MostrarCond();
            }
            catch(Exception e){
               System.out.println("error");
            }
        }       
        cambiarPanel(ConductoresDEMO);
    }//GEN-LAST:event_BotonMenuConductorActionPerformed

    private void BotonMenuOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuOrdenCompraActionPerformed
        //MostrarTodo();
        MostrarTodoRan();
        cambiarPanel(OrdenExportacionDEMO);
        OrdenExportacionVehiculojComboBox.removeAllItems();
        OrdenExportacionVehiculojComboBox.addItem("Seleccione Vehiculo");
        for (int i = 0; i < listaVehiculos.size();i++){
            if (listaVehiculos.get(i) instanceof Automovil automovil){
                OrdenExportacionVehiculojComboBox.addItem(listaVehiculos.get(i).getMatricula(automovil));
            }
            else if (listaVehiculos.get(i) instanceof Aeronave aeronave){
                OrdenExportacionVehiculojComboBox.addItem(listaVehiculos.get(i).getMatricula(aeronave));
            }
            else if (listaVehiculos.get(i) instanceof Embarcacion embarcacion){
                OrdenExportacionVehiculojComboBox.addItem(listaVehiculos.get(i).getMatricula(embarcacion));
            
            }
        }
        OrdenExportacionConductorjComboBox.removeAllItems();
        OrdenExportacionConductorjComboBox.addItem("Seleccione Conductor");
        for (int i = 0; i < listaConductores.size();i++){
            OrdenExportacionConductorjComboBox.addItem(listaConductores.get(i).getCedula());
        }
        
        if (!listaProductos.isEmpty()){
            ListaP.removeAllElements();
            ListaP.addElement("Seleccione productos");
            for (int i = 0; i < listaProductos.size();i++){
                ListaP.addElement(listaProductos.get(i).getId());
            }
            OrdenExportacionProductosjList.setModel(ListaP);
        }
    }//GEN-LAST:event_BotonMenuOrdenCompraActionPerformed

    private void BotonProductoMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonProductoMenu2ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonProductoMenu2ActionPerformed

    private void BotonProductoMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonProductoMenu3ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonProductoMenu3ActionPerformed

    private void BotonAgregarProducto3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarProducto3ActionPerformed
        // TODO add your handling code here:
        float precio;
        Producto producto;
        boolean valido = true;

        ErrorIDProductojLabel1.setText(null);
        ErrorNombreProductojLabel1.setText(null);
        ErrorDescripcionProductojLabel1.setText(null);
        ErrorPrecioProductojLabel1.setText(null);
        
        for (int i = 0; i < listaProductos.size();i++){
            if (listaProductos.get(i).getId().equals(ProductoIDjTextField.getText())){
                ErrorIDProductojLabel1.setText("Existe este producto");
                valido = false;
            }
        }
        if(ProductoIDjTextField.getText().length() > 10){
            ErrorIDProductojLabel1.setText("La longitud del ID no puede superar los 10 caracteres");
            valido = false;
        }
        if(ProductoIDjTextField.getText().equals("")){
            ErrorIDProductojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ProductoNombrejTextField.getText().equals("")){
            ErrorNombreProductojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ProductoNombrejTextField.getText().length() > 25){
            ErrorNombreProductojLabel1.setText("La longitud del nombre no puede superar los 25 caracteres");
            valido = false;
        }
        if(ProductoDescripcionjTextField.getText().equals("")){
            ErrorDescripcionProductojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ProductoDescripcionjTextField.getText().length() > 50){
            ErrorDescripcionProductojLabel1.setText("La longitud del descripci[on no puede superar los 50 caracteres");
            valido = false;
        }
        if(ProductoPreciojTextField.getText().equals("")){
            ErrorPrecioProductojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ProductoPreciojTextField.getText().length() > 4){
            ErrorPrecioProductojLabel1.setText("La longitud del precio no puede superar los 4 caracteres");
            valido = false;
        }
        try{
            if (valido){
                precio = Float.parseFloat(ProductoPreciojTextField.getText());
                producto = new Producto(ProductoIDjTextField.getText(), ProductoNombrejTextField.getText(), ProductoDescripcionjTextField.getText(), precio);
                listaProductos.add(producto);
                // Crear una cadena para al¬"macenar el producto para llevarlo a archivo plano, se separá por medio de ¬
                String cad = "Producto" + "¬" + ProductoIDjTextField.getText() + "¬" + ProductoNombrejTextField.getText() + "¬" + ProductoDescripcionjTextField.getText() + "¬" + ProductoPreciojTextField.getText() + "¬|\n";
                fP = new File("data/archivosPlanos", "guardadoProd.txt");
                fPR = new File("data/archivosPlanos", "guardadoProdRan.dat");
                guardarArchivo(fP, cad);
                GuardarArchivoRandom(fPR, cad);
            }
        }
        catch(NumberFormatException e){
            ErrorPrecioProductojLabel1.setText("El valor ingresado en el precio no es valido.");
        }
        // Actualizar lista de Productos
        MostrarProd();        
    }//GEN-LAST:event_BotonAgregarProducto3ActionPerformed

    private void BotonVehiculoMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVehiculoMenu2ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonVehiculoMenu2ActionPerformed

    private void BotonVehiculoMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVehiculoMenu3ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonVehiculoMenu3ActionPerformed

    private void BotonAgregarVehiculo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarVehiculo3ActionPerformed
        // TODO add your handling code here:
        Automovil automovil;
        Embarcacion embarcacion;
        Aeronave aeronave;
        boolean valido = true;
        int anio = 0, capacidad = 0;
        String tipoSeleccionado;

        ErrorMarcaVehiculojLabel1.setText(null);
        ErrorModeloVehiculojLabel1.setText(null);
        ErrorAnioVehiculojLabel1.setText(null);
        ErrorCapacidadVehiculojLabel1.setText(null);
        ErrorTipoVehiculojLabel1.setText(null);
        ErrorPlacaVehiculojLabel1.setText(null);

        if(VehiculoMarcajTextField.getText().equals("")){
            ErrorMarcaVehiculojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(VehiculoMarcajTextField.getText().length() > 15){
            ErrorMarcaVehiculojLabel1.setText("La longitud de la marca no puede superar los 15 caracteres.");
            valido = false;
        }
        if(VehiculoModelojTextField.getText().equals("")){
            ErrorModeloVehiculojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(VehiculoModelojTextField.getText().length() > 20){
            ErrorModeloVehiculojLabel1.setText("La longitud del modelo no puede superar los 20 caracteres.");
            valido = false;
        }
        if(VehiculoAnioFabricacionjTextField.getText().equals("")){
            ErrorAnioVehiculojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(VehiculoAnioFabricacionjTextField.getText().length() > 4){
            ErrorAnioVehiculojLabel1.setText("La longitud del año no puede superar los 4 caracteres.");
            valido = false;
        }
        if(VehiculoCapacidadjTextField.getText().equals("")){
            ErrorCapacidadVehiculojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(VehiculoCapacidadjTextField.getText().length() > 4){
            ErrorCapacidadVehiculojLabel1.setText("La longitud del año no puede superar los 4 caracteres.");
            valido = false;
        }
        tipoSeleccionado = (String) VehiculoTipojComboBox.getSelectedItem();

        if (tipoSeleccionado.equals("Seleccione el tipo")){
            ErrorTipoVehiculojLabel1.setText("Se debe de seleccionar una de las opciones.");
            valido = false;
        }
        for (int i = 0; i < listaVehiculos.size();i++){
            if (listaVehiculos.get(i) instanceof Automovil automovil2){
                if (listaVehiculos.get(i).getMatricula(automovil2).equals(VehiculoPlacajTextField.getText())){
                    ErrorPlacaVehiculojLabel1.setText("Placa Existente");
                    valido = false;
                }
            }
            else if (listaVehiculos.get(i) instanceof Aeronave aeronave2){
                if (listaVehiculos.get(i).getMatricula(aeronave2).equals(VehiculoPlacajTextField.getText())){
                    ErrorPlacaVehiculojLabel1.setText("Placa Existente");
                    valido = false;
                }
            }
            else if (listaVehiculos.get(i) instanceof Embarcacion embarcacion2){
                if (listaVehiculos.get(i).getMatricula(embarcacion2).equals(VehiculoPlacajTextField.getText())){
                    ErrorPlacaVehiculojLabel1.setText("Placa Existente");
                    valido = false;
                }            
            }
        }
        if(VehiculoPlacajTextField.getText().equals("")){
            ErrorPlacaVehiculojLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        try{
            anio = Integer.valueOf(VehiculoAnioFabricacionjTextField.getText());
        }
        catch(Exception e){
            ErrorAnioVehiculojLabel1.setText("Valor ingresado para el año no valido");
            valido = false;
        }
        try{
            capacidad = Integer.valueOf(VehiculoCapacidadjTextField.getText());
        }
        catch(Exception e){
            ErrorCapacidadVehiculojLabel1.setText("Valor ingresado para la capacidad no valido");
            valido = false;
        }
        if(valido){
            if(tipoSeleccionado.equals("Automovil")){
                automovil = new Automovil(VehiculoMarcajTextField.getText(), VehiculoModelojTextField.getText(), anio, capacidad, VehiculoPlacajTextField.getText());
                listaVehiculos.add(automovil);
            }
            else if (tipoSeleccionado.equals("Aeronave")){
                aeronave = new Aeronave(VehiculoMarcajTextField.getText(), VehiculoModelojTextField.getText(), anio, capacidad, VehiculoPlacajTextField.getText());
                listaVehiculos.add(aeronave);
            }
            else if (tipoSeleccionado.equals("Embarcación")){
                embarcacion = new Embarcacion(VehiculoMarcajTextField.getText(), VehiculoModelojTextField.getText(), anio, capacidad, VehiculoPlacajTextField.getText());
                listaVehiculos.add(embarcacion);                
            }
            // Agregar el tipo de vehículo
            String cad = "";
            if(tipoSeleccionado.equals("Automovil"))
                cad = "Automovil¬";
            else if (tipoSeleccionado.equals("Aeronave"))
                cad = "Aeronave¬";
            else if (tipoSeleccionado.equals("Embarcación"))
                cad = "Embarcacion¬";
            cad += VehiculoPlacajTextField.getText() + "¬" + VehiculoMarcajTextField.getText() + "¬" + VehiculoModelojTextField.getText() + "¬" + VehiculoAnioFabricacionjTextField.getText() + "¬" + 
                    VehiculoCapacidadjTextField.getText() + "¬\n";
            fV = new File("data/archivosPlanos", "guardadoVehi.txt");
            fVR = new File("data/archivosPlanos", "guardadoVehiRan.dat");
            guardarArchivo(fV, cad);
            GuardarArchivoRandom(fVR, cad);
        }
        // Mostrar por pantalla los vehículos
        MostrarVehi();        
    }//GEN-LAST:event_BotonAgregarVehiculo3ActionPerformed

    private void VehiculoTipojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VehiculoTipojComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VehiculoTipojComboBoxActionPerformed

    private void BotonConductorMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConductorMenu2ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonConductorMenu2ActionPerformed

    private void BotonConductorMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConductorMenu3ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonConductorMenu3ActionPerformed

    private void BotonAgregarConductor3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarConductor3ActionPerformed
        // TODO add your handling code here:
        Conductor conductor;
        boolean valido = true;

        ErrorCedulaConductorjLabel1.setText(null);
        ErrorNombreConductorjLabel1.setText(null);
        ErrorLicenciaConductorjLabel1.setText(null);
        
        for (int i = 0; i < listaConductores.size();i++){
            if (listaConductores.get(i).getCedula().equals(ConductorCedulajTextField.getText())){
                ErrorCedulaConductorjLabel1.setText("Cedula de conductor repetida");
                valido = false;
            }
        }
        if(ConductorCedulajTextField.getText().length() > 10){
            ErrorCedulaConductorjLabel1.setText("La longitud de la cédula no puede superar los 10 caracteres.");
            valido = false;
        }
        if(ConductorCedulajTextField.getText().equals("")){
            ErrorCedulaConductorjLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ConductorNombrejTextField.getText().equals("")){
            ErrorNombreConductorjLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if(ConductorNombrejTextField.getText().length() > 40){
            ErrorNombreConductorjLabel1.setText("La longitud de la cédula no puede superar los 40 caracteres.");
            valido = false;
        }
        if (valido){
            conductor = new Conductor(ConductorCedulajTextField.getText(), ConductorNombrejTextField.getText(),
                ConductorLicenciajCheckBox1.isSelected(), ConductorLicenciajCheckBox2.isSelected(), ConductorLicenciajCheckBox3.isSelected());
            listaConductores.add(conductor);
            //guardar conductores
            String cad = "Conductor" + "¬" + ConductorCedulajTextField.getText() + "¬" + ConductorNombrejTextField.getText() + "¬";
            if (ConductorLicenciajCheckBox1.isSelected())
                cad += "V¬";
            else
                cad += "F¬";
            if (ConductorLicenciajCheckBox2.isSelected())
                cad += "V¬";
            else
                cad += "F¬";
            if (ConductorLicenciajCheckBox3.isSelected())
                cad += "V¬";
            else
                cad += "F¬";
            cad += "\b\n";
            fC = new File("data/archivosPlanos", "guardadoCond.txt");
            fCR = new File("data/archivosPlanos", "guardadoCondRan.dat");
            guardarArchivo(fC, cad);
            GuardarArchivoRandom(fCR, cad);
        }
        //Mostrar conductores
        MostrarCond();    
    }//GEN-LAST:event_BotonAgregarConductor3ActionPerformed

    private void ConductorLicenciajCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConductorLicenciajCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConductorLicenciajCheckBox1ActionPerformed

    private void ConductorLicenciajCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConductorLicenciajCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConductorLicenciajCheckBox2ActionPerformed

    private void BotonOrdenExportacionMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOrdenExportacionMenu2ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonOrdenExportacionMenu2ActionPerformed

    private void BotonOrdenExportacionMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOrdenExportacionMenu3ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonOrdenExportacionMenu3ActionPerformed

    private void BotonAgregarOrdenExportacion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarOrdenExportacion3ActionPerformed
        // TODO add your handling code here:
        Vehiculo vehiculo =  new Vehiculo();
        Conductor conductor = new Conductor();
        ArrayList<Producto> productos = new ArrayList<>();
        String[] cadenaProductos;
        Object[] seleccion;
        OrdenExportacion ordenExportacion;
        boolean valido = true;
        
        ErrorIdentificacionOrdenEjLabel1.setText(null);
        ErrorDestinoOrdenEjLabel1.setText(null);
        ErrorFechaOrdenEjLabel1.setText(null);
        ErrorMatriculaOrdenEjLabel1.setText(null);
        ErrorConductorOrdenEjLabel1.setText(null);
        ErrorProductosOrdenEjLabel1.setText(null);
        
        for (int i = 0; i < listaOrdenesExportacion.size();i++){
            if (listaOrdenesExportacion.get(i).getNumeroIdentificacion().equals(OrdenExportacionNumerojTextField.getText())){
                ErrorIdentificacionOrdenEjLabel1.setText("Existe esta orden");
                valido = false;
            }
        }
        if(OrdenExportacionNumerojTextField.getText().length() > 10){
            ErrorIdentificacionOrdenEjLabel1.setText("La longitud del número no puede superar los 10 caracteres.");
            valido = false;
        }
        if (OrdenExportacionNumerojTextField.getText().equals("")){
            ErrorIdentificacionOrdenEjLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if (OrdenExportacionDestinojTextField.getText().equals("")){
            ErrorDestinoOrdenEjLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if (OrdenExportacionDestinojTextField.getText().length() > 20){
            ErrorDestinoOrdenEjLabel1.setText("La longitud del destino no puede superar los 20 caracteres.");
            valido = false;
        }
        if (OrdenExportacionFechajTextField.getText().equals("")){
            ErrorFechaOrdenEjLabel1.setText("Ingrese un dato.");
            valido = false;
        }
        if (OrdenExportacionFechajTextField.getText().equals("")){
            ErrorFechaOrdenEjLabel1.setText("La longitud de la fecha no puede superar los 20 caracteres.");
            valido = false;
        }
        if (OrdenExportacionVehiculojComboBox.getSelectedIndex() == 0){
            ErrorMatriculaOrdenEjLabel1.setText("Seleccione un dato valido.");
            valido = false;
        }
        if (OrdenExportacionVehiculojComboBox.getSelectedIndex() != 0){
            int i = OrdenExportacionVehiculojComboBox.getSelectedIndex();
            vehiculo = listaVehiculos.get(i-1);
        }    
        if (vehiculo.getMarca() == null) {
            valido = false;
        }    
        if (OrdenExportacionConductorjComboBox.getSelectedIndex() != 0){
            int i = OrdenExportacionConductorjComboBox.getSelectedIndex();
            conductor = listaConductores.get(i-1);
        }               
        if (conductor.getCedula() == null) {
            valido = false;
        }        

        if (OrdenExportacionConductorjComboBox.getSelectedIndex() == 0){
            ErrorConductorOrdenEjLabel1.setText("Seleccione un dato valido.");
            valido = false;
        }
        if (OrdenExportacionProductosjList.getSelectedIndices().length == 0){
            ErrorProductosOrdenEjLabel1.setText("No se ha seleccionado nada");
            valido = false;
        }
        if (OrdenExportacionProductosjList.getSelectedIndex() == 0){
            ErrorProductosOrdenEjLabel1.setText("Seleccione un dato valido.");
            valido = false;
        }
        if (!listaProductos.isEmpty() && valido){
            cadenaProductos = new String[OrdenExportacionProductosjList.getSelectedIndices().length];
            
            seleccion = OrdenExportacionProductosjList.getSelectedValuesList().toArray();
            for (int i = 0; i < OrdenExportacionProductosjList.getSelectedIndices().length; i++){
                cadenaProductos[i] = seleccion[i].toString();
            }
            for (int j = 0; j < cadenaProductos.length; j++){
                for (int k = 0; k < listaProductos.size();k++){
                    if(listaProductos.get(k).getId().equals(cadenaProductos[j])){
                        productos.add(listaProductos.get(k));    
                    }
                }
            }
        }
        else{
            valido = false;
        }
        if(valido){
            ordenExportacion = new OrdenExportacion(OrdenExportacionNumerojTextField.getText(), OrdenExportacionDestinojTextField.getText(), OrdenExportacionFechajTextField.getText(), productos, vehiculo, conductor);
            listaOrdenesExportacion.add(ordenExportacion);
            // Agregar datos de la orden de exportación 
            String cad;
            cad = "Orden" + "¬" + OrdenExportacionNumerojTextField.getText() + "¬" + OrdenExportacionDestinojTextField.getText() + "¬" + OrdenExportacionFechajTextField.getText() + "¬";
            // Agregar la matricula del vehiculo
            int k = OrdenExportacionVehiculojComboBox.getSelectedIndex();
            if (listaVehiculos.get(k-1) instanceof Automovil automovil){
                cad += listaVehiculos.get(k-1).getMatricula(automovil) + "¬";
            }
            else if (listaVehiculos.get(k-1) instanceof Aeronave aeronave){
                cad += listaVehiculos.get(k-1).getMatricula(aeronave) + "¬";
            }
            else if (listaVehiculos.get(k-1) instanceof Embarcacion embarcacion){
                cad += listaVehiculos.get(k-1).getMatricula(embarcacion) + "¬";
            }
            // Agregar conductor
            cad += conductor.getCedula() + "¬";
            // Agregar productos
            for (int l = 0; l < productos.size(); l++){
                cad += productos.get(l).getId() + "¬";
            }
            cad += "no hay mas";
            fOR = new File("data/archivosPlanos", "guardadoOrdRan.dat");
            GuardarArchivoRandom(fOR, cad);
            cad += "\n";
            fO = new File("data/archivosPlanos", "guardadoOrd.txt");
            guardarArchivo(fO, cad);
        }
        //Mostrar ordenes de exportacion
        MostrarOrd();                     
    }//GEN-LAST:event_BotonAgregarOrdenExportacion3ActionPerformed

    private void OrdenExportacionVehiculojComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenExportacionVehiculojComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrdenExportacionVehiculojComboBoxActionPerformed

    private void BotonMenuOrdenCompra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMenuOrdenCompra1ActionPerformed
        MostrarTodo();
        DefaultPieDataset vehiculosOrdenEPie = new DefaultPieDataset();
        DefaultPieDataset vehiculosPie = new DefaultPieDataset();
        // Variables para total de vehículos
        int totAutomovil = 0;
        int totAeronave = 0;
        int totEmbarcacion = 0;
        // Variables para vehículos en ordn de exportación
        int totAutomovilOE = 0;
        int totAeronaveOE = 0;
        int totEmbarcacionOE = 0;
        // Vehículos totales
        if (listaVehiculos.size() != 0)
        {
            for (int i = 0; i < listaVehiculos.size(); i++){
                if (listaVehiculos.get(i) instanceof Automovil automovil){
                    totAutomovil++;
                }
                else if (listaVehiculos.get(i) instanceof Aeronave aeronave){
                    totAeronave++;
                }
                else if (listaVehiculos.get(i) instanceof Embarcacion embarcacion){
                    totEmbarcacion++;
                }
            }
            
            GraficoVehiculoTotalJPanel.removeAll();
            vehiculosPie.setValue("Automoviles", totAutomovil);
            vehiculosPie.setValue("Aeronave", totAeronave);
            vehiculosPie.setValue("Embarcaciones", totEmbarcacion);

            JFreeChart graficoCircularVehiculo = ChartFactory.createPieChart(
                "Distribución de Vehículos Totales", // Título del gráfico
                vehiculosPie,                // Conjunto de datos
                true,                        // Mostrar leyenda
                true,                        // Usar tooltips
                false                        // URLs
            );
            ChartPanel panelVehiculoTot = new ChartPanel(graficoCircularVehiculo);
            panelVehiculoTot.setPreferredSize(new Dimension(400,200));
            
            PiePlot plot = (PiePlot) graficoCircularVehiculo.getPlot();
            plot.setSectionPaint("Automoviles", new Color(60, 71, 82)); 
            plot.setSectionPaint("Aeronave", new Color(68, 84, 56));    
            plot.setSectionPaint("Embarcaciones", new Color(96, 54, 31)); 
            
            plot.setBackgroundPaint(new Color(249,242,242));
            plot.setOutlineVisible(false);
            plot.setShadowPaint(null);
            
            panelVehiculoTot.repaint();
            
            GraficoVehiculoTotalJPanel.setLayout(new BorderLayout());
            GraficoVehiculoTotalJPanel.add(panelVehiculoTot,BorderLayout.NORTH);
        }
        else
            GraficoVehiculoWarningjLabel.setText("No hay registros de vehículos.");
        
        // Vehiculos en ordenes de exportación
        for (int i = 0; i < listaOrdenesExportacion.size(); i++){
            if (listaOrdenesExportacion.get(i).getVehiculo() instanceof Automovil automovil){
                totAutomovilOE++;
            }
            else if (listaOrdenesExportacion.get(i).getVehiculo() instanceof Aeronave aeronave){
                totAeronaveOE++;
            }
            else if (listaOrdenesExportacion.get(i).getVehiculo() instanceof Embarcacion embarcacion){
                totEmbarcacionOE++;
            }
        }
        if (listaOrdenesExportacion.size() != 0)
        {
            GraficoVehiculoOEWarningjLabel.setText("");
            GraficoVehiculoOrdenEJPanel.removeAll();
            vehiculosOrdenEPie.setValue("Automoviles", totAutomovilOE);
            vehiculosOrdenEPie.setValue("Aeronave", totAeronaveOE);
            vehiculosOrdenEPie.setValue("Embarcaciones", totEmbarcacionOE);
        
            JFreeChart graficoCircularVehiculoOE = ChartFactory.createPieChart(
               "Distribución de Vehículos en Orden de Exportación", // Título del gráfico
               vehiculosOrdenEPie,                // Conjunto de datos
               true,                        // Mostrar leyenda
              true,                        // Usar tooltips
              false                        // URLs
            );
            ChartPanel panelVehiculoOE = new ChartPanel(graficoCircularVehiculoOE);
            panelVehiculoOE.setPreferredSize(new Dimension(400,200));
            
            PiePlot plot = (PiePlot) graficoCircularVehiculoOE.getPlot();
            plot.setSectionPaint("Automoviles", new Color(60, 71, 82)); 
            plot.setSectionPaint("Aeronave", new Color(68, 84, 56));    
            plot.setSectionPaint("Embarcaciones", new Color(96, 54, 31)); 
            
            plot.setBackgroundPaint(new Color(249,242,242));
            plot.setOutlineVisible(false);
            plot.setShadowPaint(null);
            
            panelVehiculoOE.repaint();
            
            GraficoVehiculoOrdenEJPanel.setLayout(new BorderLayout());
            GraficoVehiculoOrdenEJPanel.add(panelVehiculoOE,BorderLayout.NORTH);
        }
        else
            GraficoVehiculoOEWarningjLabel.setText("No hay registros de ordenes de compra.");
        cambiarPanel(VerGrafico);
    }//GEN-LAST:event_BotonMenuOrdenCompra1ActionPerformed

    private void BotonOrdenExportacionMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOrdenExportacionMenu4ActionPerformed
        // TODO add your handling code here:
        cambiarPanel(Menu);
    }//GEN-LAST:event_BotonOrdenExportacionMenu4ActionPerformed

    private void BotonOrdenExportacionMenu5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonOrdenExportacionMenu5ActionPerformed
        // TODO add your handling code here:
        cambiarPanel (Menu);
    }//GEN-LAST:event_BotonOrdenExportacionMenu5ActionPerformed

    private void ProductoIDjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductoIDjTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductoIDjTextFieldActionPerformed
    public ArrayList<String> desplegar_archivo(File f){
        ArrayList<String> cads = new ArrayList<>();
        FileReader archivo;
	BufferedReader filtrado;
	try
        {
            archivo = new FileReader(f);
            filtrado = new BufferedReader(archivo);
            String linea = "";
            while ((linea = filtrado.readLine()) != null){
                if (!linea.equals("null")){
                    cads.add(linea);
                }
                else{
                    break;
                }
            }
            archivo.close();
            filtrado.close();	
        }
        catch(FileNotFoundException e)
        {
                //Texto.append(e.getMessage());
        }
        catch(IOException e)
        {
                //Texto.append(e.getMessage());
        }
        return cads;
}
    public void guardarArchivo(File q, String cad){
        if (!cad.equals(null)){
            FileWriter archivo;
            BufferedWriter filtrado;
            String contenido = "";
            try
            {
                archivo = new FileWriter(q, true);
                filtrado = new BufferedWriter(archivo);
                contenido = cad;
                filtrado.write(contenido,0,contenido.length());
                filtrado.flush();
                filtrado.close();
                archivo.close();
            }
            catch(FileNotFoundException e)
            {
                //Texto.append(e.getMessage());
            }
            catch(IOException e)
            {
                //Texto.append(e.getMessage());
            }
        }        
    }
    public void DeArchivo(File f){
        String[] cads;
        ArrayList<String> cad = desplegar_archivo(f);        
        for (int i = 0; i < cad.size(); i++){
            cads = cad.get(i).split("¬");
            switch (cads[0]) {
                case "Automovil":
                    Automovil a = new Automovil(cads[2], cads[3], Integer.parseInt(cads[4]), Integer.parseInt(cads[5]), cads[1]);
                    listaVehiculos.add(a);
                    break;
                case "Aeronave":
                    Aeronave b = new Aeronave(cads[2], cads[1], Integer.parseInt(cads[4]), Integer.parseInt(cads[5]), cads[1]);
                    listaVehiculos.add(b);
                    break;
                case "Embarcacion":
                    Embarcacion c = new Embarcacion(cads[2], cads[1], Integer.parseInt(cads[4]), Integer.parseInt(cads[5]), cads[1]);
                    listaVehiculos.add(c);
                    break;
                case "Producto":
                    Producto d = new Producto(cads[1], cads[2], cads[3], Float.parseFloat(cads[4]));
                    listaProductos.add(d);
                    break;
                case "Conductor":
                    boolean verfalV;
                    boolean verfalA;
                    boolean verfalE;
                    if(cads[3].equals("V")){
                        verfalV = true;
                    }
                    else{
                        verfalV = false;
                    }   
                    if(cads[4].equals("V")){
                        verfalA = true;
                    }
                    else{
                        verfalA = false;
                    }   
                    if(cads[5].equals("V")){
                        verfalE = true;
                    }
                    else{
                        verfalE = false;
                    }   
                    Conductor e = new Conductor(cads[1], cads[2], verfalV, verfalA, verfalE);
                    listaConductores.add(e);
                    break;
                case "Orden":
                    int m = 6;
                    ArrayList<Producto> Prod = new ArrayList<>();
                    Producto UProd;
                    Conductor con = new Conductor();
                    Vehiculo vehi = new Vehiculo();
                    for (int j = 0; j < listaConductores.size();j++){
                        if (listaConductores.get(j).getCedula().equals(cads[5])){
                            con = listaConductores.get(j);
                        }
                    }
                    for (int k = 0; k < listaVehiculos.size();k++){
                        if (listaVehiculos.get(k) instanceof Automovil automovil){
                            if (listaVehiculos.get(k).getMatricula(automovil).equals(cads[4])){
                                vehi = listaVehiculos.get(k);
                            }
                        }
                        if (listaVehiculos.get(k) instanceof Aeronave aeronave){
                            if (listaVehiculos.get(k).getMatricula(aeronave).equals(cads[4])){
                                vehi = listaVehiculos.get(k);
                            }
                        }
                        if (listaVehiculos.get(k) instanceof Embarcacion embarcacion){
                            if (listaVehiculos.get(k).getMatricula(embarcacion).equals(cads[4])){
                                vehi = listaVehiculos.get(k);
                            }
                        }
                    }
                    
                    while (!cads[m].equals("no hay mas")){
                        for (int l = 0; l < listaProductos.size();l++){
                            if (listaProductos.get(l).getId().equals(cads[m])){
                                UProd = listaProductos.get(l);
                                Prod.add(UProd);
                            }
                        }
                        m++;
                    }
                    OrdenExportacion O = new OrdenExportacion(cads[1], cads[2], cads[3], Prod, vehi, con);
                    listaOrdenesExportacion.add(O);
                default:
                    break;
            }
        }            
    }
    public void DeArchivoRan(File q){
        try{
            
            RandomAccessFile ArchivoRandomOb = new RandomAccessFile(q, "r");
            
            if (q.getName().equals("guardadoVehiRan.dat")){
                for(int registro = 0; registro < (ArchivoRandomOb.length()/119);registro++){
                    String tipo = "";
                String placa = "";
                String marca = "";
                String modelo = "";
                int anio;
                int cantidad;
                for (int i = 0; i < 11;i++){
                    tipo += ArchivoRandomOb.readChar();
                }
                tipo = tipo.strip();
                for (int i = 0; i < 10;i++){
                    placa += ArchivoRandomOb.readChar();
                }
                placa = placa.strip();
                for (int i = 0; i < 15;i++){
                    marca += ArchivoRandomOb.readChar();
                }
                marca = marca.strip();
                for (int i = 0; i < 20;i++){
                    modelo += ArchivoRandomOb.readChar();
                }
                modelo = modelo.strip();
                anio = ArchivoRandomOb.readInt();
                cantidad = ArchivoRandomOb.readInt();
                switch (tipo) {
                    case "Automovil":
                        Automovil a = new Automovil(marca, modelo, anio, cantidad, placa);
                        listaVehiculos.add(a);
                        break;
                    case "Aeronave":
                        Aeronave b = new Aeronave(marca, modelo, anio, cantidad, placa);
                        listaVehiculos.add(b);
                        break;
                    case "Embarcacion":
                        Embarcacion c = new Embarcacion(marca, modelo, anio, cantidad, placa);
                        listaVehiculos.add(c);
                        break;
                    default:
                        break;
                    }
                }
            }   
            if (q.getName().equals("guardadoCondRan.dat")){
                for(int registro = 0; registro < (ArchivoRandomOb.length()/103);registro++){
                    String cedula = "";
                    String nombre = "";
                    boolean verfalV;
                    boolean verfalA;
                    boolean verfalE;
                    for (int i = 0; i < 10;i++){
                        cedula += ArchivoRandomOb.readChar();
                    }
                    cedula = cedula.strip();
                    for (int i = 0; i < 40;i++){
                        nombre += ArchivoRandomOb.readChar();
                    }
                    nombre = nombre.strip();
                    verfalV = ArchivoRandomOb.readBoolean();
                    verfalA = ArchivoRandomOb.readBoolean();
                    verfalE = ArchivoRandomOb.readBoolean();
                    Conductor e = new Conductor(cedula, nombre, verfalV, verfalA, verfalE);
                    listaConductores.add(e);
                }
            }
            if (q.getName().equals("guardadoProdRan.dat")){
                for(int registro = 0; registro < (ArchivoRandomOb.length()/119);registro++){
                    String ID = "";
                    String nombre = "";
                    String Descripcion = "";
                    float precio;
                    for (int i = 0; i < 10;i++){
                        ID += ArchivoRandomOb.readChar();
                    }
                    ID = ID.strip();
                    for (int i = 0; i < 25;i++){
                        nombre += ArchivoRandomOb.readChar();
                    }
                    nombre = nombre.strip();
                    for (int i = 0; i < 50;i++){
                        Descripcion += ArchivoRandomOb.readChar();
                    }
                    Descripcion = Descripcion.strip();
                    precio = ArchivoRandomOb.readFloat();
                    Producto d = new Producto(ID, nombre, Descripcion, precio);
                    listaProductos.add(d);
                }                
            }
            if (q.getName().equals("guardadoOrdRan.dat")){
                for(int registro = 0; registro < (ArchivoRandomOb.length()/419);registro++){
                    String numero = "";
                    String destino = "";
                    String fecha = "";
                    String placa = "";
                    String cedula = "";
                    ArrayList<Producto> lista = new ArrayList<>();
                    Conductor cond = new Conductor();
                    Vehiculo Vehi = new Vehiculo();
                    String Producto = "";
                    for (int i = 0; i < 10;i++){
                        numero += ArchivoRandomOb.readChar();
                    }
                    numero = numero.strip();
                    for (int i = 0; i < 20;i++){
                        destino += ArchivoRandomOb.readChar();
                    }
                    destino = destino.strip();
                    for (int i = 0; i < 10;i++){
                        fecha += ArchivoRandomOb.readChar();
                    }
                    fecha = fecha.strip();
                    for (int i = 0; i < 10;i++){
                        placa += ArchivoRandomOb.readChar();
                    }
                    placa = placa.strip();
                    for (int k = 0; k < listaVehiculos.size();k++){
                        if (listaVehiculos.get(k) instanceof Automovil automovil){
                            if (listaVehiculos.get(k).getMatricula(automovil).equals(placa)){
                                Vehi = listaVehiculos.get(k);
                            }
                        }
                        if (listaVehiculos.get(k) instanceof Aeronave aeronave){
                            if (listaVehiculos.get(k).getMatricula(aeronave).equals(placa)){
                                Vehi = listaVehiculos.get(k);
                            }
                        }
                        if (listaVehiculos.get(k) instanceof Embarcacion embarcacion){
                            if (listaVehiculos.get(k).getMatricula(embarcacion).equals(placa)){
                                Vehi = listaVehiculos.get(k);
                            }
                        }
                    }
                    for (int i = 0; i < 10;i++){
                        cedula += ArchivoRandomOb.readChar();
                    }
                    cedula = cedula.strip();
                    for (int k = 0; k < listaConductores.size();k++){
                        if(cedula.equals(listaConductores.get(k).getCedula())){
                            cond = listaConductores.get(k);
                        }
                    }
                    for(int i = 0; i < 15; i++){
                        Producto = "";
                        for(int j = 0; j < 10;j++){
                            Producto += ArchivoRandomOb.readChar();
                        }
                        Producto = Producto.strip();
                        for (int k = 0; k < listaProductos.size();k++){
                            if(Producto.equals(listaProductos.get(k).getId())){
                                lista.add(listaProductos.get(k));
                            }
                        }
                    }
                    OrdenExportacion O = new OrdenExportacion(numero, destino, fecha, lista, Vehi, cond);
                    listaOrdenesExportacion.add(O);
                }                
            }
        }
        catch (FileNotFoundException e){
            //System.out.println(error);
        }            
        catch (IOException e){
            //System.out.println(error);
        }
    }
    public void GuardarArchivoRandom(File q, String cad){
        try{
            RandomAccessFile ArchivoRandomOb = new RandomAccessFile(q, "rw");
            String[] cads = cad.split("¬");
            String cadfin;
            switch (cads[0]) {                
                case "Automovil":
                    for(int i = cads[0].length(); i < 11; i++){
                        cads[0] = cads[0] + " ";
                    }
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 15){
                        for(int i = cads[2].length(); i < 15; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if(cads[3].length() < 20){
                        for(int i = cads[3].length(); i < 20; i++){
                            cads[3] = cads[3] + " ";
                        }
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    cadfin = cads[0] + cads[1] + cads[2] + cads[3];
                    ArchivoRandomOb.writeChars(cadfin);
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[4]));
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[5]));
                    break;
                case "Aeronave":
                    for(int i = cads[0].length(); i < 11; i++){
                        cads[0] = cads[0] + " ";
                    }
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 15){
                        for(int i = cads[2].length(); i < 15; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if(cads[3].length() < 20){
                        for(int i = cads[3].length(); i < 20; i++){
                            cads[3] = cads[3] + " ";
                        }
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    cadfin = cads[0] + cads[1] + cads[2] + cads[3];
                    ArchivoRandomOb.writeChars(cadfin);
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[4]));
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[5]));
                    break;
                case "Embarcacion":
                    for(int i = cads[0].length(); i < 11; i++){
                        cads[0] = cads[0] + " ";
                    }
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 15){
                        for(int i = cads[2].length(); i < 15; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if(cads[3].length() < 20){
                        for(int i = cads[3].length(); i < 20; i++){
                            cads[3] = cads[3] + " ";
                        }
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    cadfin = cads[0] + cads[1] + cads[2] + cads[3];
                    ArchivoRandomOb.writeChars(cadfin);
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[4]));
                    ArchivoRandomOb.writeInt(Integer.parseInt(cads[5]));
                    break;
                case "Producto":
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 25){
                        for(int i = cads[2].length(); i < 25; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if(cads[3].length() < 50){
                        for(int i = cads[3].length(); i < 50; i++){
                            cads[3] = cads[3] + " ";
                        }
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    cadfin = cads[1] + cads[2] + cads[3];
                    ArchivoRandomOb.writeChars(cadfin);
                    ArchivoRandomOb.writeFloat(Float.parseFloat(cads[4]));
                    break;
                case "Conductor":
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 40){
                        for(int i = cads[2].length(); i < 40; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    cadfin = cads[1] + cads[2];
                    ArchivoRandomOb.writeChars(cadfin);
                    if (cads[3].equals("V")){
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("true"));
                    }
                    else{
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("false"));
                    }
                    if (cads[4].equals("V")){
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("true"));
                    }
                    else{
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("false"));
                    }
                    if (cads[5].equals("V")){
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("true"));
                    }
                    else{
                        ArchivoRandomOb.writeBoolean(Boolean.parseBoolean("false"));
                    }
                    break;
                case "Orden":
                    int cont = 0;
                    if(cads[1].length() < 10){
                        for(int i = cads[1].length(); i < 10; i++){
                            cads[1] = cads[1] + " ";
                        }
                    }
                    if(cads[2].length() < 20){
                        for(int i = cads[2].length(); i < 20; i++){
                            cads[2] = cads[2] + " ";
                        }
                    }
                    if(cads[3].length() < 10){
                        for(int i = cads[3].length(); i < 10; i++){
                            cads[3] = cads[3] + " ";
                        }
                    }
                    if(cads[4].length() < 10){
                        for(int i = cads[4].length(); i < 10; i++){
                            cads[4] = cads[4] + " ";
                        }
                    }
                    if(cads[5].length() < 10){
                        for(int i = cads[5].length(); i < 10; i++){
                            cads[5] = cads[5] + " ";
                        }
                    }
                    cadfin = cads[1] + cads[2] + cads[3] + cads[4] + cads[5];
                    for(int p = 6;p < cads.length;p++){
                        for (int esp = cads[p].length(); esp < 10; esp++){
                            cads[p] = cads[p] + " ";
                        }
                        cadfin += cads[p];
                        cont++;
                    }
                    
                    for (int x = cont; x < 15; x++){
                        cadfin += "-1      -1";
                    }
                    if (ArchivoRandomOb.length() != 0){
                        ArchivoRandomOb.seek(ArchivoRandomOb.length());
                    }
                    ArchivoRandomOb.writeChars(cadfin);
                    break;
                default:
                    break;
            }
        }
        catch (FileNotFoundException e){
            //System.out.println(error);
        }            
        catch (IOException e){
            //System.out.println(error);
        }
    }
    public void MostrarVehi(){
        String cad2 = "";
        for (int i = 0; i < listaVehiculos.size(); i++){
            cad2 += ("Vehículo #" + (i+1) + "\n");
            if (listaVehiculos.get(i) instanceof Automovil automovil2){
                cad2 += "Automovil:\n" + listaVehiculos.get(i).verVehiculo(automovil2) + "\n";
            }
            else if (listaVehiculos.get(i) instanceof Aeronave aeronave2){
                cad2 += "Aeronave:\n" + listaVehiculos.get(i).verVehiculo(aeronave2) + "\n";
            }
            else if (listaVehiculos.get(i) instanceof Embarcacion embarcacion2){
                cad2 += "Embarcación:\n" + listaVehiculos.get(i).verVehiculo(embarcacion2) + "\n";
            }
        }
        MostrarVehiculosTextArea1.setText(cad2);
    }
    public void MostrarProd(){
        String cad = "";
        for (int i = 0; i < listaProductos.size(); i++){
            cad += "Producto #" + (i+1) + "\n" + listaProductos.get(i).verProducto() + "\n";
        }
        MostrarProductosTextArea1.setText(cad);
    }
    public void MostrarCond(){
        String cad = "";
        for (int i = 0; i < listaConductores.size(); i++){
            cad += ("Conductor #" + (i+1) + "\n");
            cad += (listaConductores.get(i).verConductor());
        }
        MostrarConductoresTextArea1.setText(cad);
    }
    public void MostrarOrd(){
        String cad2 = "" ;
        for (int i = 0; i < listaOrdenesExportacion.size(); i++){
            cad2 += ("Orden de exportación #" + (i+1) + "\n");
            cad2 += (listaOrdenesExportacion.get(i).verOrdenExportacion());
        }
        MostrarOrdenesExportacionTextArea1.setText(cad2);  
    }
    /**
     * @param args the command line arguments
     */
    public void MostrarTodo(){
        if(listaVehiculos.isEmpty()){
            try{
            fV = new File("data/archivosPlanos", "guardadoVehi.txt");
            DeArchivo(fV);
            MostrarVehi();
            }
            catch(Exception e){
                
            }
        }        
        if(listaConductores.isEmpty()){
            try{
            fC = new File("data/archivosPlanos", "guardadoCond.txt");
            DeArchivo(fC);
            MostrarCond();
            }
            catch(Exception e){
               System.out.println("error");
            }
        }  
        if(listaProductos.isEmpty()){
            try{
            fP = new File("data/archivosPlanos", "guardadoProd.txt");
            DeArchivo(fP);
            MostrarProd();
            }
            catch(Exception e){
                System.out.print("error");
            }
        }      
        if(listaOrdenesExportacion.isEmpty()){
            try{
            fO = new File("data/archivosPlanos", "guardadoOrd.txt");
            DeArchivo(fO);
            MostrarOrd();
            }
            catch(Exception e){

            }
        }        
    }
    public void MostrarTodoRan(){
        if(listaVehiculos.isEmpty()){
            try{
            fVR = new File("data/archivosPlanos", "guardadoVehiRan.dat");
            DeArchivoRan(fVR);
            MostrarVehi();
            }
            catch(Exception e){
                
            }
        }        
        if(listaConductores.isEmpty()){
            try{
            fCR = new File("data/archivosPlanos", "guardadoCondRan.dat");
            DeArchivoRan(fCR);
            MostrarCond();
            }
            catch(Exception e){
               System.out.println("error");
            }
        }  
        if(listaProductos.isEmpty()){
            try{
            fPR = new File("data/archivosPlanos", "guardadoProdRan.dat");
            DeArchivoRan(fPR);
            MostrarProd();
            }
            catch(Exception e){
                System.out.print("error");
            }
        }      
        if(listaOrdenesExportacion.isEmpty()){
            try{
            fOR = new File("data/archivosPlanos", "guardadoOrdRan.dat");
            DeArchivoRan(fOR);
            MostrarOrd();
            }
            catch(Exception e){
                System.out.print("error");
            }
        }     
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    public void cambiarPanel(javax.swing.JPanel panel)
    {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(panel);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AgregarConductor1;
    private javax.swing.JLabel AgregarConductorjLabel4;
    private javax.swing.JLabel AgregarConductorjLabel5;
    private javax.swing.JLabel AgregarConductorjLabel6;
    private javax.swing.JPanel AgregarOrdenExportacion1;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel10;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel11;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel12;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel7;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel8;
    private javax.swing.JLabel AgregarOrdenExportacionjLabel9;
    private javax.swing.JPanel AgregarProducto1;
    private javax.swing.JLabel AgregarProductojLabel5;
    private javax.swing.JLabel AgregarProductojLabel6;
    private javax.swing.JLabel AgregarProductojLabel7;
    private javax.swing.JLabel AgregarProductojLabel8;
    private javax.swing.JPanel AgregarVehiculo1;
    private javax.swing.JLabel AgregarVehiculojLabel10;
    private javax.swing.JLabel AgregarVehiculojLabel11;
    private javax.swing.JLabel AgregarVehiculojLabel12;
    private javax.swing.JLabel AgregarVehiculojLabel7;
    private javax.swing.JLabel AgregarVehiculojLabel8;
    private javax.swing.JLabel AgregarVehiculojLabel9;
    private javax.swing.JButton BotonAgregarConductor3;
    private javax.swing.JButton BotonAgregarOrdenExportacion3;
    private javax.swing.JButton BotonAgregarProducto3;
    private javax.swing.JButton BotonAgregarVehiculo3;
    private javax.swing.JButton BotonConductorMenu2;
    private javax.swing.JButton BotonConductorMenu3;
    private javax.swing.JButton BotonMenuConductor;
    private javax.swing.JButton BotonMenuOrdenCompra;
    private javax.swing.JButton BotonMenuOrdenCompra1;
    private javax.swing.JButton BotonMenuProducto;
    private javax.swing.JButton BotonMenuVehiculo;
    private javax.swing.JButton BotonOrdenExportacionMenu2;
    private javax.swing.JButton BotonOrdenExportacionMenu3;
    private javax.swing.JButton BotonOrdenExportacionMenu4;
    private javax.swing.JButton BotonOrdenExportacionMenu5;
    private javax.swing.JButton BotonProductoMenu2;
    private javax.swing.JButton BotonProductoMenu3;
    private javax.swing.JButton BotonVehiculoMenu2;
    private javax.swing.JButton BotonVehiculoMenu3;
    private javax.swing.JTextField ConductorCedulajTextField;
    private javax.swing.JCheckBox ConductorLicenciajCheckBox1;
    private javax.swing.JCheckBox ConductorLicenciajCheckBox2;
    private javax.swing.JCheckBox ConductorLicenciajCheckBox3;
    private javax.swing.JTextField ConductorNombrejTextField;
    private javax.swing.JPanel Conductores1;
    private javax.swing.JPanel ConductoresDEMO;
    private javax.swing.JLabel ErrorAnioVehiculojLabel1;
    private javax.swing.JLabel ErrorCapacidadVehiculojLabel1;
    private javax.swing.JLabel ErrorCedulaConductorjLabel1;
    private javax.swing.JLabel ErrorConductorOrdenEjLabel1;
    private javax.swing.JLabel ErrorDescripcionProductojLabel1;
    private javax.swing.JLabel ErrorDestinoOrdenEjLabel1;
    private javax.swing.JLabel ErrorFechaOrdenEjLabel1;
    private javax.swing.JLabel ErrorIDProductojLabel1;
    private javax.swing.JLabel ErrorIdentificacionOrdenEjLabel1;
    private javax.swing.JLabel ErrorLicenciaConductorjLabel1;
    private javax.swing.JLabel ErrorMarcaVehiculojLabel1;
    private javax.swing.JLabel ErrorMatriculaOrdenEjLabel1;
    private javax.swing.JLabel ErrorModeloVehiculojLabel1;
    private javax.swing.JLabel ErrorNombreConductorjLabel1;
    private javax.swing.JLabel ErrorNombreProductojLabel1;
    private javax.swing.JLabel ErrorPlacaVehiculojLabel1;
    private javax.swing.JLabel ErrorPrecioProductojLabel1;
    private javax.swing.JLabel ErrorProductosOrdenEjLabel1;
    private javax.swing.JLabel ErrorTipoVehiculojLabel1;
    private javax.swing.JLabel GraficoVehiculoOEWarningjLabel;
    private javax.swing.JPanel GraficoVehiculoOrdenEJPanel;
    private javax.swing.JPanel GraficoVehiculoTotalJPanel;
    private javax.swing.JLabel GraficoVehiculoWarningjLabel;
    private javax.swing.JPanel GraficoVehiculosOrdenExportacion;
    private javax.swing.JPanel GraficoVehiculosTotales;
    private javax.swing.JPanel Menu;
    private javax.swing.JTextArea MostrarConductoresTextArea1;
    private javax.swing.JTextArea MostrarOrdenesExportacionTextArea1;
    private javax.swing.JTextArea MostrarProductosTextArea1;
    private javax.swing.JTextArea MostrarVehiculosTextArea1;
    private javax.swing.JPanel OrdenExportacion1;
    private javax.swing.JComboBox<String> OrdenExportacionConductorjComboBox;
    private javax.swing.JPanel OrdenExportacionDEMO;
    private javax.swing.JTextField OrdenExportacionDestinojTextField;
    private javax.swing.JTextField OrdenExportacionFechajTextField;
    private javax.swing.JTextField OrdenExportacionNumerojTextField;
    private javax.swing.JList<String> OrdenExportacionProductosjList;
    private javax.swing.JComboBox<String> OrdenExportacionVehiculojComboBox;
    private javax.swing.JTextField ProductoDescripcionjTextField;
    private javax.swing.JTextField ProductoIDjTextField;
    private javax.swing.JTextField ProductoNombrejTextField;
    private javax.swing.JTextField ProductoPreciojTextField;
    private javax.swing.JPanel Productos1;
    private javax.swing.JPanel ProductosDEMO;
    private javax.swing.JTextField VehiculoAnioFabricacionjTextField;
    private javax.swing.JTextField VehiculoCapacidadjTextField;
    private javax.swing.JTextField VehiculoMarcajTextField;
    private javax.swing.JTextField VehiculoModelojTextField;
    private javax.swing.JTextField VehiculoPlacajTextField;
    private javax.swing.JComboBox<String> VehiculoTipojComboBox;
    private javax.swing.JPanel Vehiculos1;
    private javax.swing.JPanel VehiculosDEMO;
    private javax.swing.JPanel VerGrafico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    // End of variables declaration//GEN-END:variables
}
